<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.1">

    <group id="isyfact:service:Verbindlich">
        <includeConstraint refId="isyfact:service:ExceptionAnServiceSchnitstelle"/>
        <includeConstraint refId="isyfact:service:ServiceSchnitstelleMitLoggingKontext"/>
        <includeConstraint refId="isyfact:service:ServiceMethodenEnthaltenAufrufKontext"/>

    </group>

    <group id="isyfact:service:Empfohlen">
        <includeConstraint refId="isyfact:service:ServiceInterfacesEndenAufRemoteBean"/>
    </group>

    <concept id="isyfact:service:RemoteBeanInterface">
        <description>
            Markiert Interfaces, deren Name mit "RemoteBean" endet, mit "Service:RemoteBeanInterface".
        </description>
        <cypher><![CDATA[
            MATCH
              (:Layer {name: "service"})-[:CONTAINS*]->(i:Interface)
            WHERE
              i.name ENDS WITH "RemoteBean"
            SET
              i:Service:RemoteBeanInterface
            RETURN
              i AS RemoteBeanInterface
        ]]></cypher>
    </concept>

    <constraint id="isyfact:service:ServiceInterfacesEndenAufRemoteBean">
        <requiresConcept refId="isyfact:layer:DefinedLayer"/>
        <description>
            Namen von Service Interfaces enden auf "RemoteBean".
        </description>
        <cypher><![CDATA[
            MATCH
             (:Layer {name: "service"})-[:CONTAINS*]->(i:Interface)
            WHERE
              NOT i.name ENDS WITH "RemoteBean"
            RETURN
              i AS ServiceInterfaceOhneRemoteBeanEndung
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:service:ExceptionAnServiceSchnitstelle">
        <requiresConcept refId="isyfact:service:RemoteBeanInterface"/>
        <description>
            Tritt bei der Verarbeitung eines Service-Aufrufs im Anwendungskern oder in der Komponente
            "Service" eine Exception auf, so muss diese Exception in eine Exception der Service-Schnittstelle
            umgewandelt werden. Es werden keine Exceptions des Anwendungskerns geworfen.
        </description>
        <cypher><![CDATA[
            MATCH
              (rbi:RemoteBeanInterface)-[:DECLARES]->(m:Method)-[:THROWS]->(exception:Type)
            WHERE
              NOT (:Layer {name: "service"})-[:CONTAINS*]->(exception)
            RETURN
              rbi AS RemoteBeanInterface, m AS Methode, exception AS Exception
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:service:ServiceSchnitstelleMitLoggingKontext">
        <requiresConcept refId="isyfact:service:RemoteBeanInterface"/>
        <description>
            An der Exception-Fassade an der Service-Schnittstelle ist die Correlation-ID zu setzen.
        </description>
        <cypher><![CDATA[
            MATCH
              (remoteBeanImpl:Type)-[:IMPLEMENTS]->(:RemoteBeanInterface),
              (remoteBeanImpl)-[:DECLARES]->(m:Method),
              ()-[:ANNOTATED_BY]->(:Annotation)-[:OF_TYPE]->(stelltLoggingKontextBereit:Type)
            WHERE
              stelltLoggingKontextBereit.name = "StelltLoggingKontextBereit"
              AND m.name <> "<init>"
              AND NOT (m)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(stelltLoggingKontextBereit)
            RETURN
              remoteBeanImpl AS RemoteBeanImpl, m AS MethodeOhneLoggingKontext
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:service:ServiceMethodenEnthaltenAufrufKontext">
        <requiresConcept refId="isyfact:service:RemoteBeanInterface"/>
        <description>
            Jede Methode der RemoteBean-Schnittstelle muss als ersten Parameter ein Objekt der Klasse
            "AufrufKontextTo" bzw. "ClientAufrufKontextTo" verwenden.
        </description>
        <cypher><![CDATA[
            MATCH
              (rbi:RemoteBeanInterface)-[:DECLARES]->(m:Method)
            WHERE
              NOT m.signature =~ ".+\\([a-z\\.0-9_]+(AufrufKontextTo|ClientAufrufKontextTo)(,.+|\\))?"
            RETURN
              rbi.name AS RemoteBeanInterface, m.signature AS MethodeOhneAufrufKontextTo
        ]]></cypher>
    </constraint>

</jqa:jqassistant-rules>