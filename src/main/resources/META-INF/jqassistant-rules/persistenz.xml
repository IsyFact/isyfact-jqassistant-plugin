<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.1">

    <group id="isyfact:persistence:Empfohlen">
        <includeConstraint refId="isyfact:persistence:EntitiesLiegenInPackageEntity"/>
        <includeConstraint refId="isyfact:persistence:EntitiesVerwendenKeineCompositeKeys"/>
        <includeConstraint refId="isyfact:persistence:DaoImplPackage"/>
        <includeConstraint refId="isyfact:persistence:DaoVonAbstractDaoAbgeleitet"/>
        <includeConstraint refId="isyfact:persistence:DaoImplementiertDaoInterface"/>
        <includeConstraint refId="isyfact:persistence:KeineBulkQueries"/>
        <includeConstraint refId="isyfact:persistence:GenerationTypeAuto"/>
        <includeConstraint refId="isyfact:persistence:KeinePlisDataSource"/>
    </group>

    <concept id="isyfact:persistence:Dao">
        <description>
            Ein DAO ist ein Klasse, die im Package *.dao.impl liegt oder von AbstractDao ableitet oder
            ein DAO-Interface implementiert
        </description>
        <cypher><![CDATA[
            MATCH
              (:Layer {name: "persistence"})-[:CONTAINS*]->(:Package {name: "dao"})-[:CONTAINS]->(:Package {name: "impl"})-[:CONTAINS]->(dao:Class)
            SET
              dao:Persistence:Dao
            RETURN
              count(dao)
            UNION
            MATCH
              (dao:ApplicationType)-[:EXTENDS*]->(:Type {fqn: "de.bund.bva.pliscommon.persistence.dao.AbstractDao"})
            SET
              dao:Persistence:Dao
            RETURN
              count(dao)
            UNION
            MATCH
              (dao:ApplicationType:Class)-[:IMPLEMENTS*]->(:Type {fqn: "de.bund.bva.pliscommon.persistence.dao.Dao"})
            SET
              dao:Persistence:Dao
            RETURN
              count(dao)
        ]]></cypher>
    </concept>


    <concept id="isyfact:persistence:PersistenceType">
        <description>
            Markiert alle Typen im Layer "persistence" mit "PersistenceType".
        </description>
        <cypher><![CDATA[
            MATCH
              (:Layer {name: "persistence"})-[:CONTAINS*]->(persistenceType:Type)
            SET
              persistenceType:Persistence:PersistenceType
            RETURN
              persistenceType AS PersistenceType
        ]]></cypher>
    </concept>

    <concept id="isyfact:persistence:JpaEmbeddedId">
        <description>
            Markiert EmbeddedIds. Kopie von jpa2:EmbeddedId mit geändertem RETURN.
        </description>
        <cypher><![CDATA[
            MATCH
              (t:Type)-[:DECLARES]->(member),
              (member)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(a:Type)
            WHERE
              (member:Field or member:Method)
              AND a.fqn="javax.persistence.EmbeddedId"
            SET
              member:Jpa:IsyEmbeddedId
            RETURN
              count(member)
        ]]></cypher>
    </concept>

    <constraint id="isyfact:persistence:EntitiesLiegenInPackageEntity">
        <requiresConcept refId="jpa2:Entity"/>
        <requiresConcept refId="isyfact:layer:DefinedLayer"/>

        <description>
            Entitäten werden in "(organisation).(domäne).(system).persistence.(komponente).entity"
            implementiert.
        </description>
        <cypher><![CDATA[
            MATCH
              (e:Jpa:Entity:ApplicationType)
            WHERE
             NOT (:Layer {name: "persistence"})-[:CONTAINS*1..2]->(:Package {name: "entity"})-[:CONTAINS]->(e)
            RETURN
              e AS EntityImFalschenPackage
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:persistence:EntitiesVerwendenKeineCompositeKeys">
        <requiresConcept refId="jpa2:Entity"/>
        <requiresConcept refId="isyfact:persistence:JpaEmbeddedId"/>
        <description>
            Der Primärschlüssel einer Entität besteht aus genau einem Attribut. Zusammengesetzte Schlüssel
            dürfen nicht verwendet werden.
        </description>
        <cypher><![CDATA[
            MATCH
              (e:Jpa:Entity:ApplicationType)
            WHERE
              (e)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(:Type {fqn: "javax.persistence.IdClass"}) OR
              (e)-[:DECLARES]->(:IsyEmbeddedId)
            RETURN
              e AS EntityMitCompositeKey
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:persistence:DaoImplPackage">
        <requiresConcept refId="isyfact:persistence:Dao"/>
        <description>
            Ein DAO liegt im Package *.persistence.*.dao.impl.
        </description>
        <cypher><![CDATA[
            MATCH
              (d:Dao)
            WHERE
              NOT (:Layer {name: "persistence"})-[:CONTAINS*]->(:Package {name: "dao"})-[:CONTAINS]->(:Package {name: "impl"})-[:CONTAINS]->(d)
            RETURN
              d AS DaoImFalschenPackage
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:persistence:DaoVonAbstractDaoAbgeleitet">
        <requiresConcept refId="isyfact:persistence:Dao"/>
        <description>
            Ein DAO ist von AbstractDao abgeleitet.
        </description>
        <cypher><![CDATA[
            MATCH
              (d:Dao)
            WHERE
              NOT (d)-[:EXTENDS*]->(:Type {fqn: "de.bund.bva.pliscommon.persistence.dao.AbstractDao"})
            RETURN
              d AS DaoNichtVonAbstractDaoAbgeleitet
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:persistence:DaoImplementiertDaoInterface">
        <requiresConcept refId="isyfact:persistence:Dao"/>
        <description>
            Ein DAO implementiert das Dao-Interface.
        </description>
        <cypher><![CDATA[
            MATCH
              (d:Dao)
            WHERE
              NOT (d)-[:IMPLEMENTS*]->(:Type {fqn: "de.bund.bva.pliscommon.persistence.dao.Dao"})
            RETURN
              d AS DaoImplementiertNichtDaoInterface
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:persistence:KeineBulkQueries">
        <description>
            JPA bietet über die Methode "query.executeUpdate()" die Möglichkeit, in JPQL formulierte
            DELETE- und UPDATE-Statements, sog. Bulk-Queries, auszuführen. Die Nutzung solcher Bulk-Queries
            ist verboten.
        </description>
        <cypher><![CDATA[
            MATCH
              (t:ApplicationType)-[:DECLARES]->(m:Method)-[i:INVOKES]->(executeUpdate:Method),
              (query:Type)-[:DECLARES]->(executeUpdate:Method)
            WHERE
              query.fqn = "javax.persistence.Query" AND
              executeUpdate.signature = "int executeUpdate()"
            RETURN
              t.name AS Klasse, m.name AS Methode, i.lineNumber AS Zeile
        ]]></cypher>
    </constraint>

    <constraint id="isyfact:persistence:GenerationTypeAuto">
        <description>
            Der GenerationType der "@GeneratedValue" Annotation muss in jedem Fall "AUTO" sein.
        </description>
        <cypher><![CDATA[
            MATCH
              (t:ApplicationType)-[:DECLARES]->(m:Member)-[:ANNOTATED_BY]->(generatedValue),
              (generatedValue)-[:OF_TYPE]->(generatedValueType:Type),
              (generatedValue)-[:HAS]->(strategyAttribute:Enum),
              (strategyAttribute)-[:IS]->(generationType:Member)
            WHERE
              generatedValueType.fqn = "javax.persistence.GeneratedValue" AND
              strategyAttribute.name = "strategy" AND NOT
              generationType.signature = "javax.persistence.GenerationType AUTO"
            RETURN
              t.name AS Klasse, m.name AS Member, generationType
        ]]></cypher>
    </constraint>

    <constraint  id="isyfact:persistence:KeinePlisDataSource">
        <requiresConcept refId="isyfact:spring:SpringXmlKonfiguration"/>
        <description>
            Als Datasource-Implementierung muss die Implementierung aus
            de.bund.bva.pliscommon.persistence.datasource.PlisDataSource
            genutzt werden.
        </description>
        <cypher><![CDATA[
            MATCH
              (:XmlConfiguration)-[:HAS_ELEMENT*]->(bean:Xml:Element {name: "bean"}),
              (bean)-[:HAS_ATTRIBUTE]->(class:Xml:Attribute {name: "class", value: "de.bund.bva.pliscommon.persistence.datasource.PlisDataSource"})
            WITH
              count(bean) AS plisDataSourceCount
            WHERE
              plisDataSourceCount = 0
            RETURN
              plisDataSourceCount AS KeinePlisDataSource
        ]]></cypher>
    </constraint>

</jqa:jqassistant-rules>